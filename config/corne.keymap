/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ALT  |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | BKSP| RSE  | RET |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y  &kp U          &kp I         &kp O    &kp P     &kp MINUS
&kp LCTRL   &kp A  &kp S  &kp D     &kp F      &kp G    &kp H  &kp J          &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N  &kp M          &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LCMD  &kp SPACE  &mo 1    &mo 2  &kp BACKSPACE  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3        &kp N4                &kp N5                      &kp N6    &kp N7          &kp N8     &kp N9     &kp N0    &kp PLUS
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4                &kp LEFT  &kp DOWN        &kp UP     &kp RIGHT  &kp PIPE  &kp SQT
&kp LSHFT   &trans        &trans        &trans        &trans                &trans                      &trans    &trans          &trans     &trans     &trans    &kp RIGHT_SHIFT
                                        &trans        &kp LG(LS(NUMBER_4))  &kp LS(LC(LG(NUMBER_4)))    &trans    &kp LEFT_ARROW  &kp RIGHT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET          &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp EQUAL
&kp LCTRL  &none     &none   &none     &none         &none        &kp C_VOLUME_UP    &kp PLUS   &kp SLASH        &kp LBKT  &kp RBKT  &kp DOUBLE_QUOTES
&kp LSHFT  &trans    &trans  &trans    &trans        &trans       &kp C_VOLUME_DOWN  &kp MINUS  &kp BACKSLASH    &kp LBRC  &kp RBRC  &kp RIGHT_SHIFT
                             &kp DOWN  &kp UP_ARROW  &trans       &kp C_PLAY_PAUSE   &trans     &trans
            >;
        };
    };
};
